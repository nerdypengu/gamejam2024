declare class Scene_Battle extends Scene_Message {
    protected _statusWindow: Window_BattleStatus | null;
    protected _skillWindow: any;
    protected _itemWindow: any;
    protected _partyCommandWindow: any;
    protected _actorCommandWindow: any;
    protected _actorWindow: any;
    protected _enemyWindow: any;
    protected _logWindow: any;
    protected _helpWindow: any;
    protected _cancelButton: any;
    protected _spriteset: Spriteset_Battle | null;
    initialize(): void;
    create(): void;
    start(): void;
    update(): void;
    updateVisibility(): void;
    updateBattleProcess(): void;
    isTimeActive(): boolean;
    isAnyInputWindowActive(): any;
    changeInputWindow(): void;
    stop(): void;
    terminate(): void;
    shouldAutosave(): boolean | null;
    needsSlowFadeOut(): boolean | null;
    updateLogWindowVisibility(): void;
    updateStatusWindowVisibility(): void;
    shouldOpenStatusWindow(): boolean;
    updateStatusWindowPosition(): void;
    statusWindowX(): number;
    updateInputWindowVisibility(): void;
    needsInputWindowChange(): boolean;
    updateCancelButton(): void;
    createDisplayObjects(): void;
    createSpriteset(): void;
    createAllWindows(): void;
    createLogWindow(): void;
    logWindowRect(): Rectangle;
    createStatusWindow(): void;
    statusWindowRect(): Rectangle;
    createPartyCommandWindow(): void;
    partyCommandWindowRect(): Rectangle;
    createActorCommandWindow(): void;
    actorCommandWindowRect(): Rectangle;
    createHelpWindow(): void;
    helpWindowRect(): Rectangle;
    createSkillWindow(): void;
    skillWindowRect(): Rectangle;
    createItemWindow(): void;
    itemWindowRect(): Rectangle;
    createActorWindow(): void;
    actorWindowRect(): Rectangle;
    createEnemyWindow(): void;
    enemyWindowRect(): Rectangle;
    helpAreaTop(): number;
    helpAreaBottom(): number;
    helpAreaHeight(): number;
    buttonAreaTop(): number;
    windowAreaHeight(): number;
    createButtons(): void;
    createCancelButton(): void;
    closeCommandWindows(): void;
    hideSubInputWindows(): void;
    startPartyCommandSelection(): void;
    commandFight(): void;
    commandEscape(): void;
    startActorCommandSelection(): void;
    commandAttack(): void;
    commandSkill(): void;
    commandGuard(): void;
    commandItem(): void;
    commandCancel(): void;
    selectNextCommand(): void;
    selectPreviousCommand(): void;
    startActorSelection(): void;
    onActorOk(): void;
    onActorCancel(): void;
    startEnemySelection(): void;
    onEnemyOk(): void;
    onEnemyCancel(): void;
    onSkillOk(): void;
    onSkillCancel(): void;
    onItemOk(): void;
    onItemCancel(): void;
    onSelectAction(): void;
    endCommandSelection(): void;
}
